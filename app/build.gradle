import org.jetbrains.kotlin.config.KotlinCompilerVersion

apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.sonarqube'

apply from: '../scripts/detekt_setup.gradle'
apply from: '../scripts/jacoco_setup.gradle'
apply from: '../scripts/lint_setup.gradle'

ext {
    APP_VERSION_CODE = getVersionCode()
    APP_KEYSTORE_ALIAS = getKeyAlias()
    APP_STORE_PASSWORD = storePassword()
    APP_KEY_PASSWORD = keyPassword()
}

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "it.ilker.repeatcard"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias APP_KEYSTORE_ALIAS
            keyPassword APP_KEY_PASSWORD
            storeFile file(System.getenv("HOME") + "/ilker/repeatcard-keys.jks")
            storePassword APP_STORE_PASSWORD
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "[DEV] Repeatcard"
            testCoverageEnabled true
        }
        release {
            resValue "string", "app_name", "Repeatcard"
            minifyEnabled false
            shrinkResources false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.release
        }
    }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api Libs.coroutines
    implementation Libs.androidx_appcompat
    implementation Libs.androidx_kotlin_extensions
    implementation Libs.androidx_constraint
    implementation Libs.androidx_legacy_support
    implementation Libs.date
    implementation Libs.google_material
    implementation Libs.koin
    implementation Libs.koinViewModel
    implementation Libs.kotlinx_serialization
    implementation Libs.kotlin_stdlib
    implementation Libs.lifecycle_extensions
    implementation Libs.lifecycle_viewmodel
    implementation Libs.multidex
    implementation Libs.navigation_fragment
    implementation Libs.navigation
    implementation Libs.room_runtime
    implementation Libs.room_ktx
    implementation Libs.timber
    implementation Libs.viewpager2
    kapt Libs.room_compiler

    // Test
    testImplementation TestLibs.junit
    androidTestImplementation AndroidTestLibs.junit
    androidTestImplementation AndroidTestLibs.espresso_core
    androidTestImplementation TestLibs.room_testing

    // Image
    implementation Libs.ucrop
    implementation Libs.rx_android
    implementation Libs.rx_java

    // Glide
    implementation Libs.glide
    kapt Libs.glide

    // Firebase
    implementation Libs.firebase_ads
    implementation Libs.firebase_analytics
    implementation Libs.firebase_crashlytics

    // LiquidSwipe
    implementation Libs.lottie
    implementation Libs.liquidSwipe
    implementation Libs.pageIndicator
}

sonarqube {
    properties {
        property "sonar.organization", "dement0"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", System.getenv("SONARCLOUD_TOKEN")
        property "sonar.projectName", "repeatcard"
        property "sonar.projectKey", "Dement0_repeatcard"
        property "sonar.projectVersion", getVersionCode()
        property "sonar.exclusions", "**/*.java,**/*.class"

        property "sonar.junit.reportPaths", "build/test-results/testDebugUnitTest"
        property "sonar.androidLint.reportPaths", "build/reports/lint-results-debug.xml"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
        property "sonar.kotlin.detekt.reportPaths", "build/reports/detekt/detekt.xml"
    }
}
