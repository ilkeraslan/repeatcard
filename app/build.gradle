apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.sonarqube'

apply from: '../scripts/detekt_setup.gradle'
apply from: '../scripts/jacoco_setup.gradle'
apply from: '../scripts/lint_setup.gradle'

ext {
    APP_VERSION_CODE = getVersionCode()
    APP_KEYSTORE_ALIAS = getKeyAlias()
    APP_STORE_PASSWORD = storePassword()
    APP_KEY_PASSWORD = keyPassword()
}

android {
    compileSdkVersion Versions.targetSdk
    buildToolsVersion Versions.buildTools
    defaultConfig {
        applicationId "it.ilker.repeatcard"
        minSdkVersion Versions.minSdk
        targetSdkVersion Versions.targetSdk
        versionCode APP_VERSION_CODE
        versionName Versions.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias System.getenv("BITRISEIO_ANDROID_KEYSTORE_ALIAS")
            keyPassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
            storeFile file(System.getenv("HOME") + "/keystores/repeatcard.jks")
            storePassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PASSWORD")
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "[DEV] Repeatcard"
            testCoverageEnabled true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            resValue "string", "app_name", "Repeatcard"
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.0.5'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project (":design")
    implementation project (":business")

    api Libs.coroutines
    implementation Libs.androidx_appcompat
    implementation Libs.androidx_kotlin_extensions
    implementation Libs.androidx_constraint
    implementation Libs.androidx_legacy_support
    implementation Libs.date
    implementation Libs.google_material
    implementation Libs.koin
    implementation Libs.koinCompose
    implementation Libs.koinAndroid
    implementation Libs.kotlinx_serialization
    implementation Libs.kotlin_stdlib
    implementation Libs.lifecycle_extensions
    implementation Libs.lifecycle_viewmodel
    implementation Libs.multidex
    implementation Libs.navigation_fragment
    implementation Libs.navigation
    implementation Libs.room_runtime
    implementation Libs.room_ktx
    implementation Libs.room_rx
    implementation Libs.timber
    implementation Libs.viewpager2
    kapt Libs.room_compiler

    // Compose
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation 'androidx.compose.material:material:1.0.5'
    implementation 'androidx.compose.animation:animation:1.0.5'
    implementation 'androidx.compose.ui:ui-tooling:1.0.5'
    implementation "androidx.navigation:navigation-compose:2.4.0-beta02"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.4.0'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.0.5'

    // Accompanist
    implementation Libs.accompanistInsets

    // Test
    testRuntimeOnly TestLibs.junitJupiterEngine
    testImplementation TestLibs.junitJupiterApi
    testImplementation TestLibs.junitVintageEngine
    testImplementation TestLibs.mockk
    testImplementation TestLibs.coroutinesTest
    androidTestImplementation AndroidTestLibs.junit
    androidTestImplementation AndroidTestLibs.espresso_core
    androidTestImplementation TestLibs.room_testing

    // Image
    implementation Libs.ucrop
    implementation Libs.rx_android
    implementation Libs.rx_java

    // Glide
    implementation Libs.glide
    kapt Libs.glide

    // Firebase
    implementation Libs.firebase_ads
    implementation Libs.firebase_analytics
    implementation Libs.firebase_crashlytics

    // LiquidSwipe
    implementation Libs.lottie
    implementation Libs.liquidSwipe
    implementation Libs.pageIndicator
}

sonarqube {
    properties {
        property "sonar.organization", "dement0"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", System.getenv("SONARCLOUD_TOKEN")
        property "sonar.projectName", "repeatcard"
        property "sonar.projectKey", "Dement0_repeatcard"
        property "sonar.projectVersion", getVersionCode()
        property "sonar.exclusions", "**/*.java,**/*.class"

        property "sonar.junit.reportPaths", "build/test-results/testDebugUnitTest"
        property "sonar.androidLint.reportPaths", "build/reports/lint-results-debug.xml"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
        property "sonar.kotlin.detekt.reportPaths", "build/reports/detekt/detekt.xml"
    }
}
